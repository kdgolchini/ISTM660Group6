# -*- coding: utf-8 -*-
"""Group6Row64.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Xw624yHeOjTnoVxPxbHnBP7uWjHTgvHA
"""

import matplotlib
import matplotlib.colors as cl
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import row64

def GradientBars(inDf, inValueI, inNameI):
	cList = ['#479DDD', '#83B3DF']
	values = inDf[inDf.columns[inValueI]]
	names = inDf[inDf.columns[inNameI]]
	plt.rc('xtick', labelsize=8)
	plt.rc('ytick', labelsize=7)
	x_pos = np.arange(len(names))
	plt.xticks(x_pos, names,horizontalalignment='right',rotation=45)
	cRGB = [cl.to_rgb(col) for col in cList]
	bars = plt.bar(x_pos, values, color=cList[0])
	cmap = cl.LinearSegmentedColormap.from_list("", cRGB)
	ax = bars[0].axes
	lim = ax.get_xlim()+ax.get_ylim()
	for bar in bars:
		bar.set_facecolor("none")
		x,y = bar.get_xy()
		w, h = bar.get_width(), bar.get_height()
		grad = np.atleast_2d(np.linspace(0,1*w/max(values),256))
		ax.imshow(grad, extent=[x,x+w,y,y+h], aspect="auto", zorder=0, cmap=cmap)
	ax.axis(lim)
	ax.get_yaxis().set_major_formatter(matplotlib.ticker.FuncFormatter(lambda x, p: format(int(x), ',')))

def GroupSum(idf, mergeColI):
	mName =df.columns[mergeColI]
	idf = idf.groupby([mName],as_index=False).sum()
	return idf

def LinReg(inDf, inInd1, inInd2):
	values1 = inDf[inDf.columns[inInd1]]
	values2 = inDf[inDf.columns[inInd2]]
	fig, ax = plt.subplots(figsize = (9, 9))
	ax.scatter(values1, values2, s=60, alpha=0.7, edgecolors="k")
	b, a = np.polyfit(values1, values2, deg=1)
	print("intercept: ", a)
	print("coefficient: ", b)
	xmin = min(values1)
	xmax = max(values1)
	xrng = xmax - xmin
	xseq = np.linspace(xmin-.1*xrng, xmax+.1*xrng, num=10)
	ax.plot(xseq, a + b * xseq, color="k", lw=2.5)

#IMPORT("C:\Users\rdbullar\Downloads\top_50_fast_food_US.csv")
dfIn = row64.get_dataframe("Dataframe13")
df=dfIn.copy(deep=True)
LinReg(df,6,2)
df=GroupSum(df,1)
GradientBars(df,1,0)
plt.hist( df.iloc[:,3] )